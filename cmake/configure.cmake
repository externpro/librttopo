include(xpcfg)
set(geosTarget xpro::geos_c)
foreach(lib geos)
  if(TARGET ${${lib}Target})
    get_target_property(${lib}Includes ${${lib}Target} INTERFACE_INCLUDE_DIRECTORIES)
    if(NOT "${${lib}Includes}" MATCHES "-NOTFOUND")
      list(APPEND reqIncs ${${lib}Includes})
    endif()
  endif()
endforeach()
cmake_push_check_state(RESET)
set(CMAKE_REQUIRED_INCLUDES ${reqIncs})
xpcfgCheckIncludeFile(assert.h HAVE_ASSERT_H)
xpcfgCheckIncludeFile(ctype.h HAVE_CTYPE_H)
xpcfgCheckIncludeFile(dlfcn.h HAVE_DLFCN_H)
xpcfgCheckIncludeFile(errno.h HAVE_ERRNO_H)
xpcfgCheckIncludeFile(float.h HAVE_FLOAT_H)
xpcfgCheckIncludeFile(geos_c.h HAVE_GEOS_C_H)
xpcfgCheckIncludeFile(inttypes.h HAVE_INTTYPES_H)
xpcfgCheckIncludeFile(math.h HAVE_MATH_H)
xpcfgCheckIncludeFile(memory.h HAVE_MEMORY_H)
xpcfgCheckIncludeFile(stdarg.h HAVE_STDARG_H)
xpcfgCheckIncludeFile(stdint.h HAVE_STDINT_H)
xpcfgCheckIncludeFile(stdio.h HAVE_STDIO_H)
xpcfgCheckIncludeFile(stdlib.h HAVE_STDLIB_H)
xpcfgCheckIncludeFile(strings.h HAVE_STRINGS_H)
xpcfgCheckIncludeFile(string.h HAVE_STRING_H)
xpcfgCheckIncludeFile(sys/stat.h HAVE_SYS_STAT_H)
xpcfgCheckIncludeFile(sys/types.h HAVE_SYS_TYPES_H)
xpcfgCheckIncludeFile(unistd.h HAVE_UNISTD_H)
xpcfgCheckIncludeFile(sys/time.h HAVE_SYS_TIME_H)
xpcfgCheckSymFnExists(fdatasync HAVE_FDATASYNC)
xpcfgCheckSymFnExists(ftruncate HAVE_FTRUNCATE)
xpcfgCheckSymFnExists(getcwd HAVE_GETCWD)
xpcfgCheckSymFnExists(gettimeofday HAVE_GETTIMEOFDAY)
xpcfgCheckSymFnExists(localtime_r HAVE_LOCALTIME_R)
xpcfgCheckSymFnExists(memmove HAVE_MEMMOVE)
xpcfgCheckSymFnExists(memset HAVE_MEMSET)
xpcfgCheckSymFnExists(sqrt HAVE_SQRT)
xpcfgCheckSymFnExists(strcasecmp HAVE_STRCASECMP)
xpcfgCheckSymFnExists(strerror HAVE_STRERROR)
xpcfgCheckSymFnExists(strftime HAVE_STRFTIME)
xpcfgCheckSymFnExists(strncasecmp HAVE_STRNCASECMP)
xpcfgCheckSymFnExists(strstr HAVE_STRSTR)
xpcfgFnEmptyStringBug(lstat, HAVE_LSTAT_EMPTY_STRING_BUG)
xpcfgFnEmptyStringBug(stat, HAVE_STAT_EMPTY_STRING_BUG)
xpcfgLstatFollowsSlashedSymlink(LSTAT_FOLLOWS_SLASHED_SYMLINK)
xpcfgStdcHeaders(STDC_HEADERS)
xpcfgTimeWithSysTime(TIME_WITH_SYS_TIME)
xpcfgTmInHdr(sys/time.h TM_IN_SYS_TIME)
# cmakedefine entries in config.h.cmake.in
set(LIBRTGEOM_VERSION ${CMAKE_PROJECT_VERSION})
xpcfgLtObjdir(LT_OBJDIR)
set(NDEBUG 1) # Must be defined in order to disable debug mode.
set(PACKAGE ${CMAKE_PROJECT_NAME})
set(PACKAGE_BUGREPORT https://git.osgeo.org/gitea/rttopo/librttopo/issues)
set(PACKAGE_NAME ${CMAKE_PROJECT_NAME})
set(PACKAGE_STRING "${CMAKE_PROJECT_NAME} ${CMAKE_PROJECT_VERSION}")
set(PACKAGE_TARNAME ${CMAKE_PROJECT_NAME})
set(PACKAGE_URL https://git.osgeo.org/gitea/rttopo/librttopo)
set(PACKAGE_VERSION ${CMAKE_PROJECT_VERSION})
set(RTGEOM_DEBUG_LEVEL 0)
string(REGEX REPLACE "^v([0-9]+)\\.([0-9]+)(\\.[0-9]+)?(\\.[0-9]+)?" "\\1\\2" RTGEOM_GEOS_VERSION ${GEOS_VER})
set(VERSION ${CMAKE_PROJECT_VERSION})
xpcfgConst()
xpcfgCheckTypeSize()
if(NOT HAVE_SIZEOF_OFF_T)
  set(off_t "long int") # Define to `long int' if <sys/types.h> does not define. */
endif()
if(NOT HAVE_SIZEOF_SIZE_T)
  set(size_t "unsigned int") # Define to `unsigned int' if <sys/types.h> does not define.
endif()
xpcfgVolatile(volatile)
cmake_pop_check_state()
set(CONFIG_H_COMMENT "{CMAKE_BINARY_DIR}/cmake/rttopo_config.h.  Generated from cmake/rttopo_config.h.cmake.in by cmake/configure.cmake.")
configure_file(${CMAKE_CURRENT_LIST_DIR}/rttopo_config.h.cmake.in ${CMAKE_BINARY_DIR}/CMakeFiles/rttopo_config.h.cmake)
configure_file(${CMAKE_BINARY_DIR}/CMakeFiles/rttopo_config.h.cmake ${CMAKE_BINARY_DIR}/cmake/rttopo_config.h)
